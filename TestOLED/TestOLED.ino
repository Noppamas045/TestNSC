#include <Adafruit_GFX.h>
#include <Adafruit_SSD1306.h> //OLED
#include <Arduino.h>
//#include <I2CScanner.h>
#include <SPI.h>
//#include <U8g2lib.h>
#include <Wire.h>  //I2C

#define bitmapWidth 128
#define bitmapHeight 32
#define I2CScanner 0x70 // #define ชื่อ ค่า
//I2C device found at address 0x3C (จอ) , 0x70 (i2c)


Adafruit_SSD1306 display0 = Adafruit_SSD1306(128, 32, &Wire);
Adafruit_SSD1306 display1 = Adafruit_SSD1306(128, 32, &Wire);
Adafruit_SSD1306 display2 = Adafruit_SSD1306(128, 32, &Wire);
Adafruit_SSD1306 display3 = Adafruit_SSD1306(128, 32, &Wire);
Adafruit_SSD1306 display4 = Adafruit_SSD1306(128, 32, &Wire);
const unsigned char oledAll [] PROGMEM = {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0e, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0e, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3f, 0x80, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xe0, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xc0, 0x30, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xbf, 0xb8, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x7c, 0xdc, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0xfc, 0x64, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0d, 0xfc, 0x36, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0d, 0xfc, 0x16, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0d, 0xfc, 0x16, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0d, 0xff, 0xf6, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0d, 0xff, 0xf6, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0d, 0xff, 0xf6, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0xff, 0xe6, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0xff, 0xec, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x7f, 0xdc, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x9f, 0x38, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xc0, 0x70, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7f, 0xe0, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1f, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};

//I2C
void TCA9548A(uint8_t bus) 
{
  Wire.beginTransmission(I2CScanner);  // ใช้เริ่มการส่งข้อมูลไปยังอุปกรณ์ TCA9548A address is I2CScanner 0x70
  Wire.write(1 << bus); //รับข้อมูลจากตัวส่ง
  Wire.endTransmission(); // ใช้จบการส่งข้อมูล
}
//OLED I2C0
void displayoled0(){
  display0.begin(I2CScanner, 0x3C);
  display0.clearDisplay();
  display0.setCursor(0, 10);
  display0.setTextColor(1);
  display0.setTextSize(1);
  display0.print("0");

}
//OLED I2C1
void displayoled1(){

  display1.clearDisplay();
  display1.setCursor(0, 10);
  display1.setTextColor(1);
  display1.setTextSize(1);
  display1.print("1");

}
//OLED I2C2
void displayoled2(){

  display2.clearDisplay();
  display2.setCursor(0, 10);
  display2.setTextColor(1);
  display2.setTextSize(1);
  display2.print("2");

}
 //OLED I2C3
void displayoled3(){

     display3.clearDisplay();
     display3.drawBitmap(0, 0, oledAll, 128, 32, 1);
}
//OLED I2C4
void displayoled4(){

  display4.clearDisplay();
  display4.setCursor(0, 10);
  display4.setTextColor(1);
  display4.setTextSize(1);
  display4.print("4");

}


void setup()
{
  Wire.begin(); //ใช้คำสั่งเริ่มต้นการใช้งาน I2C โดยใช้ค่าในพารามิเตอร์เป็นค่าเริ่มต้นทั้งหมด

  // Set multiplexer to channel and initialize OLED-_ with I2C addr 0x3C
  TCA9548A(0);
  display0.begin(I2CScanner, 0x3C);

  TCA9548A(1);
  display1.begin(I2CScanner, 0x3C);

  TCA9548A(2);
  display2.begin(I2CScanner, 0x3C);

  TCA9548A(3);
  display3.begin(I2CScanner, 0x3C);

  TCA9548A(4);
  display4.begin(I2CScanner, 0x3C);

}

void loop() {

  TCA9548A(0);
  displayoled0();
  display0.display();

  TCA9548A(1);
  displayoled1();
  display1.display();

  TCA9548A(2);
  displayoled2();
  display2.display();

  TCA9548A(3);
  displayoled3();
  display3.display();

  TCA9548A(4);
  displayoled4();
  display4.display();
}



